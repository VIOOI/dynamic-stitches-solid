const t=t=>{const r=String(t).match(/^(\d+(?:\.\d+)?)(.*)$/);return[parseFloat(r[1]),r[2]]},r={px:1/16,em:1,rem:1},n=n=>(o,e=n)=>{const[i,s]=(a=n,t=>{if("number"==typeof t)return[t,a];const r=t.match(/^(\d+(?:\.\d+)?)(px|em|rem)?$/);if(!r)throw new Error(`Неизвестная единица измерения: ${t}`);const[,n,o]=r;return[parseFloat(n),o||a]})(o);var a;const u=((t,n)=>o=>t===n?o:o*(r[t]/r[n]))(s,e)(i),c=`${u}${e}`,f=function(){return c};return f.value=c,f.isUnit=!0,f.toNumber=function(){return t(this.value)[0]},f[Symbol.toPrimitive]=function(r){return"string"===r?this.value.toString():"number"===r?this.value?t(this.value)[0]:0:this.value},f},o=t=>Array.from(t.slice(1),((r,n)=>parseInt(t.slice(2*n+1,2*n+3),16))),e=new Map([["rgb",/rgb\((\d+),\s*(\d+),\s*(\d+)\)/],["rgba",/rgba\((\d+),\s*(\d+),\s*(\d+),\s*(\d+(\.\d+)?)\)/],["hex",/^#([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i]]),i=new Map([["rgb",t=>`rgb(${t.slice(0,3).join(", ")})`],["rgba",t=>`rgba(${[...t.slice(0,3),1].join(", ")})`],["hex",t=>"#"+t.map((t=>t.toString(16).padStart(2,"0"))).join("")]]),s=(t,r="rgb")=>{const{format:n,values:s}=(t=>{for(const[r,n]of e){const e=t.match(n);if(e)return{format:r,values:"hex"===r?o(t):e.slice(1).map(Number)}}throw new Error("Unsupported color format")})(t);if(n===r)return t;const a=i.get(r);if(!a)throw new Error("Unsupported target format");return a(s)},a=t=>"object"==typeof t&&null!==t&&"isUnit"in t,u=t=>"function"==typeof t?t():t;function c(t,r,n){const{condition:o,onTrue:e,onFalse:i}="boolean"==typeof t?{condition:t,onTrue:r,onFalse:n}:t;if(void 0===e||void 0===i)throw new Error("Invalid arguments");const s=u(o?e:i);return a(s)?String(s):s}function f(t,r,n=void 0){let o;var e;(e=t)&&"object"==typeof e&&"input"in e&&"cases"in e?({input:o,cases:r,onDeafult:n}=t):o=t;const i=a(s=o)?s.toNumber():s;var s;const c=r.find((([t])=>t(i)))?.[1]??n,f=u(c);return a(f)?f[Symbol.toPrimitive]("string"):f}function l(t,r,n,o={},e=((t,r,n)=>`& .${t}-${r+1}`)){let i;return"number"==typeof t?i=t:(({count:i,name:r,css:n,context:o,formatter:e}=t),o=o||{},e=e||((t,r,n)=>`& .${t}-${r+1}`)),Array.from({length:i}).reduce(((t,s,a)=>{const u="function"==typeof n?n(a,i,o):n;return t[e(r,a,o)]={...u},t}),{})}export{s as color,n as createUnit,l as loop,f as switcher,c as when};
//# sourceMappingURL=index.js.map
